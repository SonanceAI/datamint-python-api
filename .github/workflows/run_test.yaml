name: Automated Tests

on:
  push:
    branches: [main]

  pull_request:
    branches: [main, fix/*, hotfix/*, release/*, develop]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        # Install PyTorch cpu version to install faster
        run: |
          python -m pip install --upgrade pip
          pip install "torch>=1.2" "torchvision>=0.12" --index-url https://download.pytorch.org/whl/cpu
          pip install .[dev]
      - name: Test with pytest
        run: |
          pytest tests --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov=datamintapi --cov-report=html
        timeout-minutes: 60
      - name: Test datamint-config
        run: |
          datamint-config --api-key testapikey --url "http://localhost:3001"
        timeout-minutes: 1
      - name: Upload pytest test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
      - name: Upload coverage report
        # Use always() to always run this step to publish test results when there are test failures
        if: always() && matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
